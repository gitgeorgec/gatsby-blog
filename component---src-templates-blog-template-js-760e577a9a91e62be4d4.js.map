{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@material-ui/core/esm/Paper/Paper.js","webpack:///./src/templates/blog-template.js"],"names":["MDXRenderer","require","module","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","Paper","forwardRef","ref","classes","className","_props$component","component","Component","_props$square","square","_props$elevation","elevation","other","createElement","root","concat","rounded","theme","elevations","shadows","forEach","shadow","index","boxShadow","backgroundColor","palette","background","paper","color","text","primary","transition","transitions","create","borderRadius","shape","name","BlogTemplate","data","pageContext","title","Rpath","date","body","previous","next","_renderLink","node","path","to","console","log","style","maxWidth","margin","slideDirection","padding","minHeight","display","justifyContent","pageQuery"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,6wDCTf,IAAMG,EAAQF,EAAd,Q,EACkCA,EAAQ,QAAlCG,E,EAAAA,iBAAkBC,E,EAAAA,IAClBC,EAAgBL,EAAQ,QAAxBK,YAERJ,UAAiB,SAAqB,GAKlC,IAJFK,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBP,EAAtB,GACMQ,EAAWN,EAFhB,GAKKO,EAAMV,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMW,EAAS,GAGbX,MAHa,EAIbE,OAJF,GAQMU,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAON,EAAA,mBAA2BK,WAAYG,GAA9C,M,kCClCF,+FA6BIS,EAAQ,IAAMC,YAAW,SAAeX,EAAOY,GACjD,IAAIC,EAAUb,EAAMa,QAChBC,EAAYd,EAAMc,UAClBC,EAAmBf,EAAMgB,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAgBlB,EAAMmB,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAmBpB,EAAMqB,UACzBA,OAAiC,IAArBD,EAA8B,EAAIA,EAC9CE,EAAQ,YAAyBtB,EAAO,CAAC,UAAW,YAAa,YAAa,SAAU,cAW5F,OAAO,IAAMuB,cAAcN,EAAW,YAAS,CAC7CH,UAAW,YAAKD,EAAQW,KAAMX,EAAQ,YAAYY,OAAOJ,IAAaP,GAAYK,GAAUN,EAAQa,SACpGd,IAAKA,GACJU,OAoCU,iBAhFK,SAAgBK,GAClC,IAAIC,EAAa,GAMjB,OALAD,EAAME,QAAQC,SAAQ,SAAUC,EAAQC,GACtCJ,EAAW,YAAYH,OAAOO,IAAU,CACtCC,UAAWF,MAGR,YAAS,CAEdP,KAAM,CACJU,gBAAiBP,EAAMQ,QAAQC,WAAWC,MAC1CC,MAAOX,EAAMQ,QAAQI,KAAKC,QAC1BC,WAAYd,EAAMe,YAAYC,OAAO,eAIvCjB,QAAS,CACPkB,aAAcjB,EAAMkB,MAAMD,eAE3BhB,KA6D6B,CAChCkB,KAAM,YADO,CAEZpC,I,kCC1FH,iLAyDeqC,UAzCM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,YACvBC,EAAQC,IAAM,CAAC,MAAO,cAAe,SAAUH,GAC/CI,EAAOD,IAAM,CAAC,MAAO,cAAe,QAASH,GAC7CK,EAAOF,IAAM,CAAC,MAAO,QAASH,GAC5BM,EAAmBL,EAAnBK,SAAUC,EAASN,EAATM,KAGlB,SAASC,EAAYC,GACpB,GAAIA,EAAM,CACT,IAAMC,EAAOP,IAAM,CAAC,OAAQ,cAAe,QAASM,GAC9CP,EAAQC,IAAM,CAAC,OAAQ,cAAe,SAAUM,GAEtD,OAAO,kBAAC,IAAD,CAAME,GAAID,GAAOR,GAGzB,OAAO,KAGR,OAbAU,QAAQC,IAAIZ,GAcX,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAKC,MAAOA,IACZ,0BAAMY,MAAO,CAAEC,SAAU,IAAKC,OAAQ,WACrC,kBAAC,IAAD,CAAML,GAAI,SAAV,qBACA,kBAAC,IAAD,CAAcM,eAAe,OAAOnD,UAAU,sBAC7C,kBAAC,IAAD,CAAOgD,MAAO,CAAEI,QAAS,GAAIC,UAAW,SAAYrD,UAAU,QAC7D,4BAAKoC,GACL,2BAAIE,GACJ,kBAAC,cAAD,KAAcC,KAGhB,yBAAKS,MAAO,CAAEM,QAAS,OAAQC,eAAgB,kBAC9C,6BAAMb,EAAYF,IAClB,6BAAME,EAAYD,QAWhB,IAAMe,EAAS","file":"component---src-templates-blog-template-js-760e577a9a91e62be4d4.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import \"core-js/modules/es6.array.for-each\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport useTheme from '../styles/useTheme';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    }\n  }, elevations);\n};\nvar Paper = React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var theme = useTheme();\n\n    if (!theme.shadows[elevation]) {\n      console.error(\"Material-UI: this elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[\"elevation\".concat(elevation)], className, !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: PropTypes.number,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","import React from 'react';\nimport { graphql, Link, } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport Layout from '../components/layout';\nimport SlideAnimate from '../components/slide-animate';\nimport SEO from '../components/seo';\nimport Paper from '@material-ui/core/Paper';\nimport Rpath from 'ramda/src/path';\nimport './blog.sass';\n\nconst propTypes = {\n\tdata: PropTypes.object,\n\tpageContext: PropTypes.object,\n};\n\nconst BlogTemplate = ({ data, pageContext, }) => {\n\tconst title = Rpath(['mdx', 'frontmatter', 'title'], data);\n\tconst date = Rpath(['mdx', 'frontmatter', 'date'], data);\n\tconst body = Rpath(['mdx', 'body'], data);\n\tconst { previous, next } = pageContext\n\tconsole.log(pageContext)\n\n\tfunction _renderLink(node) {\n\t\tif (node) {\n\t\t\tconst path = Rpath(['node', 'frontmatter', 'path'], node);\n\t\t\tconst title = Rpath(['node', 'frontmatter', 'title'], node);\n\n\t\t\treturn <Link to={path}>{title}</Link>\n\t\t}\n\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title={title}/>\n\t\t\t<main style={{ maxWidth: 960, margin: '0 auto',}}>\n\t\t\t\t<Link to={'/blog'}>back to blog list</Link>\n\t\t\t\t<SlideAnimate slideDirection=\"down\" className=\"background-color-5\">\n\t\t\t\t\t<Paper style={{ padding: 20, minHeight: '100vh', }} className=\"blog\">\n\t\t\t\t\t\t<h1>{title}</h1>\n\t\t\t\t\t\t<p>{date}</p>\n\t\t\t\t\t\t<MDXRenderer>{body}</MDXRenderer>\n\t\t\t\t\t</Paper>\n\t\t\t\t</SlideAnimate>\n\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between'}}>\n\t\t\t\t\t<div>{_renderLink(previous)}</div>\n\t\t\t\t\t<div>{_renderLink(next)}</div>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</Layout>\n\t)\n}\n\nBlogTemplate.propTypes = propTypes;\n\nexport default BlogTemplate;\n\nexport const pageQuery = graphql`\n\tquery BlogPostQuery($id: String) {\n\t\tmdx(id: { eq: $id }) {\n\t\t\tid\n\t\t\tbody\n\t\t\tfrontmatter {\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}