{"componentChunkName":"component---src-templates-blog-template-js","path":"/leetcode-maximum-subarray","result":{"data":{"mdx":{"id":"af4c2ca8-c42d-5b4a-96c2-366e6a193691","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Leetcode 刷題紀錄#53 Maximum Subarray\",\n  \"date\": \"2020/04/09\",\n  \"path\": \"leetcode-maximum-subarray\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\u554F\\u984C\\u63CF\\u8FF0\"), mdx(\"p\", null, \"Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.\"), mdx(\"p\", null, \"Example:\"), mdx(\"p\", null, \"Input: \", \"[-2,1,-3,4,-1,2,1,-5,4]\", \",\\nOutput: 6\\nExplanation: \", \"[4,-1,2,1]\", \" has the largest sum = 6.\"), mdx(\"h2\", null, \"\\u7B2C\\u4E00\\u500B\\u60F3\\u6CD5(Time Limit Exceeded)\"), mdx(\"p\", null, \"\\u66B4\\u529B\\u89E3\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"\\nvar maxSubArray = function(nums) {\\n    let maxSubSum = nums[0];\\n\\n    for(let subsize = 1; subsize <= nums.length; subsize++) {\\n        for(let i = 0; i < nums.length; i++) {\\n            const sub = nums.slice(i, i+subsize)\\n            const subSum = sub.reduce((a,b) => a+b, 0);\\n            if (subSum > maxSubSum) {\\n                maxSubSum = subSum;\\n            }\\n        }\\n    }\\n\\n    return maxSubSum\\n};\\n\\n\")), mdx(\"h2\", null, \"\\u7B2C\\u4E8C\\u500B\\u60F3\\u6CD5(Time Limit Exceeded)\"), mdx(\"p\", null, \"\\u66B4\\u529B\\u89E3 2\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"var maxSubArray = function(nums) {\\n    let maxSubSum = nums[0];\\n\\n    for(let i = 0; i < nums.length; i++) {\\n        for(let j = nums.length; j > i; j--) {\\n            if (nums[i] > 0) {\\n                const sub = nums.slice(i, j)\\n                const subSum = sub.reduce((a,b) => a+b, 0);\\n                if (subSum > maxSubSum) {\\n                    maxSubSum = subSum;\\n                }\\n            } else {\\n                if (nums[i] > maxSubSum) {\\n                    maxSubSum = nums[i];\\n                }\\n            }\\n        }\\n    }\\n\\n    return maxSubSum\\n};\\n\\n\")), mdx(\"h2\", null, \"\\u7B2C\\u4E09\\u500B\\u60F3\\u6CD5(wrong answer))\"), mdx(\"p\", null, \"\\u5229\\u7528\\u5169\\u500B\\u6307\\u91DD\\uFF0C\\u4E00\\u500B\\u6307\\u5411\\u982D(i)\\uFF0C\\u4E00\\u500B\\u6307\\u5411\\u5C3E(j)\\uFF0C\\u8A2D\\u5B9A\\u4E00\\u500B\\u503C\\u7D00\\u9304\\u6700\\u5927sum\\n\\u6307\\u91DD\\u5206\\u5225\\u905E\\u589E(m)\\u8207\\u905E\\u6E1B(n)\\uFF0C\\u9047\\u5230\\u975E\\u6B63\\u6578\\u5C31\\u8DF3\\u904E\\uFF0C\\u82E5\\u5169\\u500B\\u90FD\\u662F\\u6B63\\u6578\\u5247\\u8A08\\u7B97\\u5C01\\u9589\\u5340\\u9593(i+m ~ j-n)\\u7684sum\\uFF0C\\u6BD4\\u5C0D\\u6700\\u5927sum\\uFF0C\\u82E5\\u5927\\u65BC\\u5247\\u53D6\\u4EE3\"), mdx(\"hr\", null), mdx(\"h2\", null, \"\\u5077\\u770B\\u89E3\\u7B54\"), mdx(\"p\", null, \"\\u601D\\u8DEF\\n\\u7531\\u65BC\\u672C\\u984C\\u4E0D\\u9700\\u8981\\u77E5\\u9053\\u6700\\u5F8C\\u7684subArray \\u7684\\u4F4D\\u7F6E\\uFF0C\\u53EA\\u8981\\u77E5\\u9053\\u6700\\u5927\\u503C\\u5373\\u53EF\\u3002\\n\\u5F9E\\u7B2C\\u4E00\\u500B\\u6578\\u5B57\\u958B\\u59CB\\uFF0C\\u6BCF\\u589E\\u52A0\\u4E00\\u500B\\u6578\\u5B57\\uFF0C\\u53D6\\u65B0\\u6578\\u5B57\\u8207\\u524D\\u4E00\\u500B\\u4F4D\\u7F6E\\u80FD\\u53D6\\u5F97\\u7684\\u6700\\u5927\\u503C\\u8207\\u65B0\\u6578\\u5B57\\u4E4B\\u548C\\uFF08max(num\", \"[i]\", \", num\", \"[i]\", \" + maxSub\", \"[i-1]\", \")\\uFF09\\u53CA\\u70BA\\u7576\\u524D\\u4F4D\\u7F6E\\u80FD\\u53D6\\u5230\\u7684\\u6700\\u5927\\u503C(maxSub\", \"[i]\", \")\\uFF0C\\n\\u5FAA\\u74B0\\u5230\\u6700\\u5F8C\\u4E00\\u500B\\u6578\\u5B57\\uFF0C\\u904E\\u7A0B\\u4E2D\\u66F4\\u65B0\\u6700\\u5927\\u503C\\u7B54\\u6848\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"var maxSubArray = function(nums) {\\n    let maxSub = nums[0];\\n    let prevSub = nums[0];\\n\\n    for(let i = 1; i < nums.length; i++) {\\n        prevSub = Math.max(nums[i], nums[i] + prevSub)\\n        if (prevSub > maxSub) {\\n            maxSub = prevSub\\n        }\\n    }\\n\\n    return maxSub\\n}\\n\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Leetcode 刷題紀錄#53 Maximum Subarray"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"af4c2ca8-c42d-5b4a-96c2-366e6a193691","previous":{"node":{"id":"909c8b42-a630-5403-9213-3d571903888e","frontmatter":{"path":"leetcode-two-sum","title":"Leetcode 刷題紀錄#1 Two Sum"}}},"next":null}}}