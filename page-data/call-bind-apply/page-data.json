{"componentChunkName":"component---src-templates-blog-template-js","path":"/call-bind-apply","result":{"data":{"mdx":{"id":"a3b39f68-7e07-53c1-b0f3-b7bdb60a36b1","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"手動實現call, bind, apply函式\",\n  \"date\": \"2019/12/11\",\n  \"path\": \"call-bind-apply\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"Function.prototype.myCall = function(context) {\\n    context[this] = this;\\n\\n    return context[this]();\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"Function.prototype.myBind = function (context) {\\n\\n\\n    return this;\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"手動實現call, bind, apply函式"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"a3b39f68-7e07-53c1-b0f3-b7bdb60a36b1","previous":{"node":{"id":"4758948e-83f3-58bd-b277-4e25664add07","frontmatter":{"path":"/blog/js-promise","title":"手動實現 Promise"}}},"next":{"node":{"id":"20cdcda1-3032-5bc6-b287-39d7f2f6def2","frontmatter":{"path":"debounce-and-throttle","title":"Debounce 與 Throttle"}}}}}}